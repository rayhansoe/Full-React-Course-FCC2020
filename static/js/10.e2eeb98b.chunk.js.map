{"version":3,"sources":["data.js","tutorial/1-useState/useStateTopics.jsx"],"names":["data","id","name","UseStateBasics","state","useState","console","log","BasicCounter","count","setCount","style","margin","className","onClick","prevCount","setTimeout","UseStateArray","people","setPeople","removeItems","resetItems","prevPeople","splice","length","peopleList","map","person","filter","removeItem","RenderButtons","to"],"mappings":"+QAAaA,EAAO,CACnB,CAAEC,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,S,OCAHC,EAAiB,WAC7B,IAAMC,EAAQC,mBAAS,GACvB,OACC,qCACC,gDACCC,QAAQC,IAAIH,EAAM,IAClBE,QAAQC,IAAIH,EAAM,IAClBE,QAAQC,IAAIH,EAAM,GAAG,QA6DZI,EAAe,WAC3B,MAA0BH,oBAAS,kBAAM,KAAzC,mBAAOI,EAAP,KAAcC,EAAd,KAaA,OACC,qCACC,0BAASC,MAAO,CAAEC,OAAQ,UAA1B,UACC,iDACA,6BAAKH,IACL,wBAAQI,UAAU,MAAMC,QATT,kBAAMJ,GAAS,SAAAK,GAAS,OAAIN,EAAQ,MASnD,sBAGA,wBAAQI,UAAU,MAAMC,QAVR,kBAAMJ,GAAS,SAAAK,GAAS,OAAIN,EAAQA,MAUpD,mBAGA,wBAAQI,UAAU,MAAMC,QAtBT,kBAAMJ,GAAS,SAAAK,GAAS,OAAIN,EAAQ,MAsBnD,yBAKD,0BAASE,MAAO,CAAEC,OAAQ,UAA1B,UACC,sDACA,6BAAKH,IACL,wBAAQI,UAAU,MAAMC,QA5BL,kBACrBE,YAAW,WACVN,GAAS,SAAAK,GAAS,OAAIN,EAAQ,OAC5B,MAyBD,2CAQWQ,UAjGO,WACrB,MAA4BZ,oBAAS,kBAAML,KAA3C,mBAAOkB,EAAP,KAAeC,EAAf,KAEMC,EAAc,kBAAMD,GAAU,iBAAM,OAEpCE,EAAa,kBAAMF,GAAU,SAAAG,GAAU,OAAIA,EAAWC,OAAX,MAAAD,EAAU,CAAQ,EAAGA,EAAWE,QAAtB,mBAAiCxB,SAMtFyB,EAAaP,EAAOQ,KAAI,SAAAC,GAC7B,IAAQ1B,EAAa0B,EAAb1B,GAAIC,EAASyB,EAATzB,KAEZ,OACC,sBAAKW,UAAU,OAAf,UACC,6BAAKX,IACL,wBAAQY,QAAS,kBAVD,SAAAb,GAClBkB,GAAU,SAAAG,GAAU,OAAIA,EAAWM,QAAO,SAAAD,GAAM,OAAIA,EAAO1B,KAAOA,QASzC4B,CAAW5B,IAAlC,sBAF0BA,MAOvB6B,EAAgB,kBACpBZ,EAAOM,OAIJN,EAAOM,OAAS,EACnB,qCACC,wBAAQX,UAAU,MAAMC,QAASM,EAAjC,0BAGA,wBAAQP,UAAU,MAAMC,QAASO,EAAjC,4BAKD,wBAAQR,UAAU,MAAMC,QAASM,EAAjC,0BAbA,wBAAQP,UAAU,MAAMC,QAASO,EAAjC,0BAkBF,OACC,qCACC,wDAEA,eAAC,IAAD,CAAMU,GAAG,IAAT,UACC,8BAAI,KAAJ,UAAkB,OAGlBN,EACD,cAACK,EAAD","file":"static/js/10.e2eeb98b.chunk.js","sourcesContent":["export const data = [\r\n\t{ id: 1, name: \"john\" },\r\n\t{ id: 2, name: \"peter\" },\r\n\t{ id: 3, name: \"susan\" },\r\n\t{ id: 4, name: \"anna\" },\r\n]\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { data } from \"../../data\"\r\n\r\nexport const UseStateBasics = () => {\r\n\tconst state = useState(1)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Basic UseState</h1>\r\n\t\t\t{console.log(state[0])}\r\n\t\t\t{console.log(state[1])}\r\n\t\t\t{console.log(state[1](1))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst UseStateArray = () => {\r\n\tconst [people, setPeople] = useState(() => data)\r\n\r\n\tconst removeItems = () => setPeople(() => [])\r\n\r\n\tconst resetItems = () => setPeople(prevPeople => prevPeople.splice(0, prevPeople.length, ...data))\r\n\r\n\tconst removeItem = id => {\r\n\t\tsetPeople(prevPeople => prevPeople.filter(person => person.id !== id))\r\n\t}\r\n\r\n\tconst peopleList = people.map(person => {\r\n\t\tconst { id, name } = person\r\n\r\n\t\treturn (\r\n\t\t\t<div className='item' key={id}>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<button onClick={() => removeItem(id)}>remove</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst RenderButtons = () =>\r\n\t\t!people.length ? (\r\n\t\t\t<button className='btn' onClick={resetItems}>\r\n\t\t\t\tReset Items\r\n\t\t\t</button>\r\n\t\t) : people.length < 4 ? (\r\n\t\t\t<>\r\n\t\t\t\t<button className='btn' onClick={removeItems}>\r\n\t\t\t\t\tRemove Items\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btn' onClick={resetItems}>\r\n\t\t\t\t\tReset Items\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t) : (\r\n\t\t\t<button className='btn' onClick={removeItems}>\r\n\t\t\t\tRemove Items\r\n\t\t\t</button>\r\n\t\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>UseState Array Example</h1>\r\n\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<p>{\"< \"}back</p>{\" \"}\r\n\t\t\t</Link>\r\n\r\n\t\t\t{peopleList}\r\n\t\t\t<RenderButtons />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport const BasicCounter = () => {\r\n\tconst [count, setCount] = useState(() => 0)\r\n\r\n\tconst increment = () => setCount(prevCount => count + 1)\r\n\r\n\tconst increaseLater = () =>\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetCount(prevCount => count + 5)\r\n\t\t}, 2000)\r\n\r\n\tconst decrement = () => setCount(prevCount => count - 1)\r\n\r\n\tconst resetCount = () => setCount(prevCount => count - count)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section style={{ margin: \"4rem 0\" }}>\r\n\t\t\t\t<h2>Regular Counter</h2>\r\n\t\t\t\t<h1>{count}</h1>\r\n\t\t\t\t<button className='btn' onClick={decrement}>\r\n\t\t\t\t\tDecrease\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btn' onClick={resetCount}>\r\n\t\t\t\t\tReset\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btn' onClick={increment}>\r\n\t\t\t\t\tIncrease\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section style={{ margin: \"4rem 0\" }}>\r\n\t\t\t\t<h2>More Complex Counter</h2>\r\n\t\t\t\t<h1>{count}</h1>\r\n\t\t\t\t<button className='btn' onClick={increaseLater}>\r\n\t\t\t\t\tIncrease 5 Times Later\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default UseStateArray\r\n"],"sourceRoot":""}